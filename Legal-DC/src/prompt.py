
class Prompt:
    def knowledge(self,query:str,reference:list):
        # prompt=f"""你的任务是做一名问答咨询专家，根据【检索结果】来回答最后的【问题】，在回答问题时，你需要注意以下几点：
        #            1.【检索结果】有多条，每条【检索结果】之间由-分隔。
        #            2.如果某条【检索结果】与【问题】无关，就不要参考这条【检索结果】。
        #            3.请直接回答问题，不要强调客服的职责。此外，避免出现无关话术，如"根据【检索结果】..."等。
        #            4.回答完
        #           【检索结果】
        #            -{reference[0]}
        #            -{reference[1]}
        #            -{reference[2]}
        #            -{reference[3]}
        #            -{reference[4]}
        #           【问题】
        #             {query}
        #           【回答】
        # """
        prompt=f"""你的是一名法律咨询专家，根据【检索结果】来回答最后的【问题】。在回答问题时，你需要注意以下几点：
                    1.【检索结果】有多条，每条【检索结果】之间由-分隔。
                    2.如果【检索结果】中没有与【问题】相关的内容，拒绝回答。
                    3.请直接回答问题，禁止出现"根据【检索结果】..."等无关话术。
                    4.回答完问题后，请列出你参考了哪些【检索结果】的编号。以固定格式“参考检索结果：1,2,3”作为回答的结束

                  【检索结果】
                  1-{reference[0]}
                  2-{reference[1]}
                  3-{reference[2]}
                  4-{reference[3]}
                  5-{reference[4]}

                  【问题】
                   {query}

                  【回答格式】
                  "回答+参考检索结果:"
                  
                   """
        # prompt=f"""你是一名法律问答咨询专家，首先你需要从【检索结果】中选择出与【问题】相关的文档，输出【相关文档】，然后根据【相关文档】完成【回答】。
        #     【检索结果】
        #      -{reference[0]}
        #      -{reference[1]}
        #      -{reference[2]}
        #      -{reference[3]}
        #      -{reference[4]}
        #     【问题】
        #       {query}

        #     【相关文档】
        #     "根据query从【检索结果】中输出相关的文档"
            
        #     【回答】
        #     "根据【相关文档】输出对于query的回答"
        #        """



        return prompt


